import numpy as np
import vtk
from glob import glob
import argparse
from utilities import *
from scipy.fftpack import fftfreq,fft,ifft
import os

class ComputePSD():
        def __init__(self,args):
		self.Args=args

	def Mian(self):
		#Read the velocity file
		VelocityData=np.load(self.Args.InputFolder+"/VelocityData.npy")

		#Get the number of probe points
		Nprobes=len(VelocityData)

		#Get the number of timesteps stored
		Nts=len(VelocityData[0])

		#Compute frequencies
		time=np.linspace(0,self.Args.Period,N_ts)
		Freqs = fftfreq(Nts, d=time[1]-time[0])

		#Loop over all of the probe points
		for i in range(Nprobes):
			#Create the file to store the data
			outfile=open("%s/PSD_Probe%.dat"%(self.Args.OutputFolder,i),'w')
			outfile.write("Frequencies PSD\n")			

			#Create an array to store the frequencies
			PSD_=np.zeros(Nts)

			#Loop over all of the probe locations
			for j in range(0,len(Velocity[i][:,0])):
				PSD_+=fft(Velocity[i][j,:])

			#Now Average the frequency content
			PSD_=PSD_/len(Velocity[i][:,0])	
			
			for j in range(0,len(PSD_)/2.):
				outfile.write("%.05f %.05f\n"%(Freqs[j],PSD_[j+int(Nts/2.)]))
						
			outfile.close()	
		

if __name__=="__main__":
        #Description
        parser = argparse.ArgumentParser(description="This script will compute power spectral density from velocity probe data")

        #Provide a path to the Magnitude Images
        parser.add_argument('-InputFolder', '--InputFolder', type=str, required=True, dest="InputFolder",help="This folder containing the velocity.npy file generated by ExtractProbePoint.py file.")

        parser.add_argument('-Period', '--Period', type=float, required=True, dest="Period",help="The period of the cardiac cycle")
        
	parser.add_argument('-OutputFolder', '--OutputFolder', type=int, required=False, dest="OutputFolder",help="The output folder to store the data")

        #Put all the arguments together
        args=parser.parse_args()

        #Call your Class
        ComputePSD(args).Main()

